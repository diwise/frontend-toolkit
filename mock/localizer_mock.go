// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"sync"
)

// LocalizerMock is a mock implementation of frontendtoolkit.Localizer.
//
//	func TestSomethingThatUsesLocalizer(t *testing.T) {
//
//		// make and configure a mocked frontendtoolkit.Localizer
//		mockedLocalizer := &LocalizerMock{
//			GetFunc: func(s string) string {
//				panic("mock out the Get method")
//			},
//			GetWithDataFunc: func(s string, stringToIfaceVal map[string]any) string {
//				panic("mock out the GetWithData method")
//			},
//		}
//
//		// use mockedLocalizer in code that requires frontendtoolkit.Localizer
//		// and then make assertions.
//
//	}
type LocalizerMock struct {
	// GetFunc mocks the Get method.
	GetFunc func(s string) string

	// GetWithDataFunc mocks the GetWithData method.
	GetWithDataFunc func(s string, stringToIfaceVal map[string]any) string

	// calls tracks calls to the methods.
	calls struct {
		// Get holds details about calls to the Get method.
		Get []struct {
			// S is the s argument value.
			S string
		}
		// GetWithData holds details about calls to the GetWithData method.
		GetWithData []struct {
			// S is the s argument value.
			S string
			// StringToIfaceVal is the stringToIfaceVal argument value.
			StringToIfaceVal map[string]any
		}
	}
	lockGet         sync.RWMutex
	lockGetWithData sync.RWMutex
}

// Get calls GetFunc.
func (mock *LocalizerMock) Get(s string) string {
	callInfo := struct {
		S string
	}{
		S: s,
	}
	mock.lockGet.Lock()
	mock.calls.Get = append(mock.calls.Get, callInfo)
	mock.lockGet.Unlock()
	if mock.GetFunc == nil {
		var (
			sOut string
		)
		return sOut
	}
	return mock.GetFunc(s)
}

// GetCalls gets all the calls that were made to Get.
// Check the length with:
//
//	len(mockedLocalizer.GetCalls())
func (mock *LocalizerMock) GetCalls() []struct {
	S string
} {
	var calls []struct {
		S string
	}
	mock.lockGet.RLock()
	calls = mock.calls.Get
	mock.lockGet.RUnlock()
	return calls
}

// GetWithData calls GetWithDataFunc.
func (mock *LocalizerMock) GetWithData(s string, stringToIfaceVal map[string]any) string {
	callInfo := struct {
		S                string
		StringToIfaceVal map[string]any
	}{
		S:                s,
		StringToIfaceVal: stringToIfaceVal,
	}
	mock.lockGetWithData.Lock()
	mock.calls.GetWithData = append(mock.calls.GetWithData, callInfo)
	mock.lockGetWithData.Unlock()
	if mock.GetWithDataFunc == nil {
		var (
			sOut string
		)
		return sOut
	}
	return mock.GetWithDataFunc(s, stringToIfaceVal)
}

// GetWithDataCalls gets all the calls that were made to GetWithData.
// Check the length with:
//
//	len(mockedLocalizer.GetWithDataCalls())
func (mock *LocalizerMock) GetWithDataCalls() []struct {
	S                string
	StringToIfaceVal map[string]any
} {
	var calls []struct {
		S                string
		StringToIfaceVal map[string]any
	}
	mock.lockGetWithData.RLock()
	calls = mock.calls.GetWithData
	mock.lockGetWithData.RUnlock()
	return calls
}
